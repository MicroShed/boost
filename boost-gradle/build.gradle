plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven'
}

archivesBaseName = 'boost-gradle-plugin'
group = 'io.openliberty.boost'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
      url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile localGroovy()
    compile 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'io.openliberty.boost:boost-common:0.1.2-SNAPSHOT'
    compile 'com.spotify:docker-client:8.11.7'

    testCompile 'junit:junit:4.12'
    testCompile("javax.ws.rs:javax.ws.rs-api:2.1")
    testCompile("com.github.docker-java:docker-java:3.1.0-rc-4")
}

test {
    doFirst { //Copying gradle.properties with plugin version to test projects
        String runtimeGroup
        String runtimeArtifactId
        String libertyRuntime = System.getProperty('runtime')
        String runtimeVersion = System.getProperty('runtimeVersion')

        if (libertyRuntime == null || libertyRuntime.isEmpty()) {
            throw new GradleException('Tests could not be run. Please specify a Liberty runtime. Choose either wlp or ol.')
        }
        if (runtimeVersion == null || runtimeVersion.isEmpty()) {
            throw new GradleException('Tests could not be run. Please specify a Liberty runtime version.')
        }

        Properties prop = new Properties()
        OutputStream output = null

        try {
            output = new FileOutputStream("${buildDir}/gradle.properties")

            if (libertyRuntime == "ol") {
                runtimeGroup = "io.openliberty"
                runtimeArtifactId = "openliberty-runtime"
            } else {
                runtimeGroup = "com.ibm.websphere.appserver.runtime"
                runtimeArtifactId = "wlp-javaee7"
            }

            // set the properties value
            prop.setProperty("boostVersion", version)
            prop.setProperty("runtimeGroup", runtimeGroup)
            prop.setProperty("runtimeArtifactId", runtimeArtifactId)
            prop.setProperty("runtimeVersion", runtimeVersion)

            // save properties to project root folder
            prop.store(output, null)

        } catch (IOException io) {
            io.printStackTrace()
        } finally {
            if (output != null) {
                try {
                    output.close()
                } catch (IOException e) {
                    e.printStackTrace()
                }
            }
        }
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

gradlePlugin {
    plugins {
        boostPlugin {
            id = 'io.openliberty.boost'
            implementationClass = 'io.openliberty.boost.gradle.Boost'
        }
    }
}
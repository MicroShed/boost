/*******************************************************************************
 * Copyright (c) 2018 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package io.openliberty.boost.docker;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;

import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.logging.Log;
import org.apache.maven.project.MavenProject;

import io.openliberty.boost.utils.MavenProjectUtil;
import net.wasdev.wlp.common.plugins.util.SpringBootUtil;

public interface Dockerizer {

	/**
	 * Creates a new Dockerfile in the project directory if the Dockerfile doesn't
	 * exist. A warning message is displayed when the Dockerfile already exists.
	 * Existing Dockerfile is not modified and will be used to build the Docker
	 * image.
	 *
	 * @throws Exception
	 */
	void createDockerFile() throws Exception;

	/**
	 * Creates a new .dockerignore file in the project directory if the
	 * .dockerignore file doesn't exist. Existing .dockerignore file will be
	 * appended with the lines generated by the plugin. Creating/appending of
	 * .dockerignore happens only when the plugin generates Dockerfile.
	 *
	 * @throws Exception
	 */
	void createDockerIgnore() throws Exception;

}
